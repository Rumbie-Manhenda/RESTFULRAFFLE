# Generated by Django 4.2.1 on 2024-08-09 16:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Prize",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("amount", models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name="Raffle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "total_tickets",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ticket_number",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "verification_code",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("participant_ip", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "raffle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets",
                        to="raffle.raffle",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("raffle", "ticket_number"),
                    ("raffle", "participant_ip"),
                },
            },
        ),
        migrations.CreateModel(
            name="Winner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "prize",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="raffle.prize"
                    ),
                ),
                (
                    "ticket",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="raffle.ticket"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="prize",
            name="raffle",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="prizes",
                to="raffle.raffle",
            ),
        ),
    ]
